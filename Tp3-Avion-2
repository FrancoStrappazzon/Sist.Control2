%CON OBSERVADOR y DLQR -NO ANDA
clear all;close all;clc
%Constantes
w=9;
a=0.07;
b=5;
c=150; %m/seg
delta_t=1e-3;
ts=70;
u=0;
Ts=1;KMAX=70;T=Ts*KMAX;

%referencias
ref1=100;
ref2=0;

alpha_0=0;
fi_0=0;
fip_0=0;
h_0=-500;%altura inicial


% t=0:delta_t:(ts-delta_t);
% x=zeros(4,ts/delta_t);
% x(1,1)=alpha_0;
% x(2,1)=fi_0;
% x(3,1)=fip_0;
% x(4,1)=h_0;

%matrices
Mat_A=[-a a 0 0 ; 0 0 1 0; w^2 -(w^2) 0 0; c 0 0 0];
Mat_B=[0;0;b*w^2;0];
Mat_C=[0 0 0 1; 0 1 0 0];%2 salidas por que mido la altura y el angulo phi];
MAT_D=0;
% [n,d]=ss2tf(Mat_A,Mat_B,Mat_C,MAT_D)
I=eye(4);
%paso al sistema discreto
H=[0;0;0;0];d_tao=Ts/100;tao=0;
for hh=1:100
 dH=expm(Mat_A*tao)*Mat_B*d_tao;
 H=H+dH;
 tao=tao+d_tao;
end
Mat_B=H;
Mat_A=expm(Mat_A*Ts);

% Construcción del sistema ampliado
Mat_Aa=[Mat_A,zeros(4,2);-Mat_C*Mat_A, eye(2)];
Mat_Ba=[Mat_B;-Mat_C*Mat_B];
Mat_Ma=[Mat_Ba Mat_Aa*Mat_Ba Mat_Aa^2*Mat_Ba Mat_Aa^3*Mat_Ba Mat_Aa^4*Mat_Ba];%Matriz Controlabilidad
rango=rank(Mat_Ma);

%calculo DLQR
Qc=diag([1/100 43000000 150 1000000 1000 1/10]); R=.00010; 
%Contrucción del Hamiltoniano para el cálculo del controlador
H=inv([eye(6) Mat_Ba*inv(R)*Mat_Ba'; zeros(6) Mat_Aa'])*[Mat_Aa zeros(6);-Qc eye(6)];
[V,D]=eig(H);MX1X2=[];
for ii=1:12
 if abs(D(ii,ii))<1
 MX1X2=[MX1X2 V(:,ii)];
 end
end
MX1=MX1X2(1:6,:); MX2=MX1X2(7:12,:);
Pc=real(MX2*inv(MX1)); 
Ka=inv(R+Mat_Ba'*Pc*Mat_Ba)*Mat_Ba'*Pc*Mat_Aa;
K=Ka(1:4);KI=-Ka(5);
aut_controlador=abs(eig(Mat_Aa-Mat_Ba*Ka));

%Cálculo del Observador de estados
Mat_Adual=Mat_A';Mat_Bdual=Mat_C';Mat_Cdual=Mat_B';
Mat_Qobs=[Mat_C;Mat_C*Mat_A;Mat_C*Mat_A^2;Mat_C*Mat_A^3];
rango_matriz_obs=rank(Mat_Qobs);

Qobs=diag([2 1 1 1]);Ro=diag([10000 100]);

%Contrucción del Hamiltoniano para el cálculo del Observador
Ho=inv([eye(4) Mat_Bdual*inv(Ro)*Mat_Bdual'; zeros(4) Mat_Adual'])*[Mat_Adual zeros(4);-Qobs eye(4)];
[Vo,Do]=eig(Ho);MX1X2=[];
for ii=1:8
 if abs(Do(ii,ii))<1
 MX1X2=[MX1X2 Vo(:,ii)];
 end
end
MX1o=MX1X2(1:4,:); MX2o=MX1X2(5:8,:);
Po=real(MX2o*inv(MX1o)); 
Kobs=(inv(Ro+Mat_Bdual'*Po*Mat_Bdual)*Mat_Bdual'*Po*Mat_Adual)';
p_observador=abs(eig(Mat_A-Kobs*Mat_C)); %Verifica polos de observabilidad

ki=1;
%Verificación de la solución con el modelo no lineal en tiempo continuo.
t=0;x=[0;0;0;h_0];
alpha_0=x(1); fi_0=x(2); fip_0=x(3); h_0=x(4); phi_pp(1)=0;delta_pp(1)=0;
u=[];
y=Mat_C*x;ve1(1)=0;ve2(1)=0;
Jn=0;V_NL=[x;0;0]'*Pc*[x;0;0];Jmin_NL=V_NL;i=1;

x_hat=[0;0;0;0];y=Mat_C*x;y_hat=0;
% phi_(1)=fip_0(1);
Jn=0;V_NL=[x;0;0]'*Pc*[x;0;0];Jmin_NL=V_NL;i=1;

for ki=2:KMAX+1
    estado=[x(1,ki-1); x(2,ki-1); x(3,ki-1); x(4,ki-1)];
    V_NL=[V_NL [estado;ve1(ki-1);ve2(ki-1)]'*Pc*[estado;ve1(ki-1);ve2(ki-1)]];
    Y_=Mat_C*estado;
    ve1(ki)=ve1(ki-1)+ref1-Y_(1);
    ve2(ki)=ve2(ki-1)+ref2-Y_(2);
    
    y_hat=Mat_C*x_hat;                  %para el observador
    ve1_o(ki)=ve1(ki-1)+ref1-y_hat(1);
    ve2_o(ki)=ve2(ki-1)+ref2-y_hat(2);
    
     u1(ki)=-Ka*[estado;ve1(ki);ve2(ki)];color='r';%sin observador
%     u1(ki)=-Ka*[x_hat;ve1_o(ki);ve2_o(ki)];color='g';%para el observado
    
    %Agrego la alinealidad de la zona muerta de 15
%     if abs(u1(ki))<8
%         u1(ki)=0;
%     end
    
   
    for kii=1:Ts/delta_t % Tiene relacion h con Ts
        u(i)=u1(ki);
        x(1,i+1)=x(1,i)+delta_t*(a*x(2,i)-a*x(1,i));
        x(2,i+1)=x(2,i)+delta_t*(x(3,i));
        x(3,i+1)=x(3,i)+delta_t*(-w^2*(x(2,i)-x(1,i)-b*u(i)));
        x(4,i+1)=x(4,i)+delta_t*(c*x(1,i));
        
        i=i+1;
    end
%     estado=[alpha_0(i-1); fi_0(i-1); fip_0(i-1); h_0(i-1)]; %Acá está x(k+1)
    x_hat=Mat_A*x_hat+Mat_B*u1(ki)+Kobs*(Y_-y_hat);
    y_hat=Mat_C*x_hat;
    Jn=[Jn Jn(ki-1)+[estado;ve1(ki);ve2(ki)]'*Qc*[estado;ve1(ki);ve2(ki)]+u1(ki)'*R*u1(ki)];
end
u(i)=u1(ki);t=(1:i)*delta_t;

figure
plot(t,x(4,:));title('Altura,h');
figure
plot(t,x(1,:));title('Alpha')
figure
plot(t,x(2,:));title('phi');
figure 
plot(t,u);title('Accion de control');
